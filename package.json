{
    "private": true,
    "name": "dos-monorepo",
    "version": "0.0.0",
    "license": "MIT",
    "workspaces": [
        "packages/*",
        "apps/*"
    ],
    "scripts": {
        "blt": "npm run build && npm run lint && npm run test",
        "build": "turbo run build",
        "build:no-cache": "turbo run build --no-cache --force",
        "build:api": "turbo run build --filter=api --no-daemon",
        "build:cui": "turbo run build --filter=clearance_ui --no-daemon",
        "build:db": "turbo run build --filter=database --no-daemon",
        "build:scanner_worker": "turbo run build --filter=scanner-worker --no-daemon",
        "build:validation": "turbo run build --filter=validation-helpers --no-daemon",
        "build:spdx-validation": "turbo run build --filter=spdx-validation --no-daemon",
        "build:s3": "turbo run build --filter=s3-helpers --no-daemon",
        "clever-logs-api": "turbo run clever-logs --filter=api --no-daemon",
        "clever-logs-cui": "turbo run clever-logs --filter=clearance_ui --no-daemon",
        "clever-cui-prebuild": "turbo run clever-cui-prebuild --no-daemon",
        "copy-types": "turbo run copy-types",
        "db:format": "turbo run db:format",
        "db:generate": "turbo run db:generate",
        "db:migrate:dev": "dotenv -e .env.local -- prisma migrate dev --schema ./packages/database/prisma/schema.prisma",
        "db:migrate:dev:create-only": "dotenv -e .env.local -- prisma migrate dev --create-only --schema ./packages/database/prisma/schema.prisma",
        "db:migrate:deploy": "prisma migrate deploy --schema ./packages/database/prisma/schema.prisma",
        "db:migrate:reset": "npm run build:s3 && dotenv -e .env.local -- turbo run db:migrate:reset",
        "db:push": "turbo run db:push",
        "db:push-accept-data-loss": "prisma db push --schema ./packages/database/prisma/schema.prisma --accept-data-loss",
        "db:studio": "dotenv -e .env.local -- prisma studio --schema ./packages/database/prisma/schema.prisma",
        "clean": "npm exec --workspaces -- npx rimraf node_modules && npx rimraf package-lock.json && npx rimraf node_modules",
        "clean-build": "npm run clean-dist && turbo run build --no-cache --force",
        "clean-dist": "npm exec --workspaces -- npx rimraf dist",
        "clean-install": "npm run clean && npm cache clean --force && npm install",
        "clean-turbo": "npm exec --workspaces -- npx rimraf .turbo",
        "clean-up": "npm run clean-turbo && npm run clean-dist && npm run clean",
        "dev": "turbo run dev --no-cache --continue --no-daemon --concurrency=13",
        "dev:api": "turbo run dev --no-cache --continue --no-daemon --filter=api",
        "dev:cui": "turbo run dev --no-cache --continue --no-daemon --filter=clearance_ui",
        "dev:prod": "turbo run dev:prod --no-cache --continue --no-daemon --concurrency=13",
        "lint": "turbo run lint",
        "lint:api": "turbo run lint --filter=api",
        "lint:cui": "turbo run lint --filter=clearance_ui",
        "prettier": "prettier --write .",
        "production:cui": "turbo run start --filter=clearance_ui --no-daemon",
        "start:api": "turbo run dev --no-cache --continue --no-daemon --filter=api",
        "start:cui": "turbo run dev --no-cache --continue --no-daemon --filter=clearance_ui",
        "test": "dotenv -e .env.local -- turbo run test --concurrency=1",
        "test:api": "dotenv -e .env.local -- turbo run test --filter=api",
        "test:cui": "dotenv -e .env.local -- turbo run test --filter=clearance_ui",
        "test:cui:watch": "dotenv -e .env.local -- turbo run test:watch --filter=clearance_ui",
        "test:cui:e2e": "dotenv -e .env.local -- turbo run test:e2e --filter=clearance_ui",
        "test:cui:e2e:reset": "npm run db:migrate:reset && dotenv -e .env.local -- turbo run test:e2e --filter=clearance_ui --no-cache --force",
        "test:cui:e2e:report": "dotenv -e .env.local -- turbo run test:e2e:report --filter=clearance_ui",
        "test:cui:e2e:ui": "dotenv -e .env.local -- npm run test:e2e:ui --workspace=apps/clearance_ui",
        "test:spdx-validation": "npm run build:spdx-validation && turbo run test --filter=spdx-validation",
        "test:validation": "npm run build:validation && turbo run test --filter=validation-helpers"
    },
    "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "4.3.0",
        "dotenv-cli": "7.4.2",
        "prettier": "3.3.2",
        "prettier-plugin-tailwindcss": "0.6.5",
        "rimraf": "5.0.7",
        "tsx": "4.19.0",
        "turbo": "2.0.5"
    },
    "engines": {
        "node": "20.10.0",
        "npm": "10.2.3"
    },
    "packageManager": "npm@10.2.3"
}
